name: Build Docker Image

on:
  workflow_call:
    inputs:
      target_tag:
        required: true
        type: string
      target_platform:
        required: false
        default: linux/amd64
        type: string        
      build_args:
        required: false
        type: string
      force:
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        if: ${{ !github.event.act }}

      - name: Check if image exists
        id: image-exists
        uses: tyriis/docker-image-tag-exists@v2.0.1
        if: ${{ !inputs.force }}
        with:
          registry: ghcr.io
          repository: ${{ github.event.repository.full_name }}
          tag: ${{ inputs.target_tag }}

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        with:
          dockerfile: ./Dockerfile
          format: sarif
          output-file: hadolint-results.sarif
          no-fail: true

      - name: Print Hadolint lint results
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        run: echo 'HADOLINT LINT RESULTS => ${{ env.HADOLINT_RESULTS }}'

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        with:
          sarif_file: hadolint-results.sarif
          wait-for-processing: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push
        uses: docker/build-push-action@v5
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        with:
          context: .
          platforms: ${{ inputs.target_platform }}
          push: true
          build-args: ${{ inputs.build_args }}
          tags: |
            ghcr.io/${{ github.event.repository.full_name }}:${{ inputs.target_tag }}
            ghcr.io/${{ github.event.repository.full_name }}:latest